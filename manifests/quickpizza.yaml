apiVersion: v1
data:
  QUICKPIZZA_TRUST_CLIENT_TRACEID: "true"
kind: ConfigMap
metadata:
  name: quickpizza-env-m6t2mfmht4
---
apiVersion: v1
kind: Service
metadata:
  name: quickpizza-catalog
spec:
  ports:
  - port: 3333
    protocol: TCP
    targetPort: 3333
  selector:
    app.k8s.io/name: quickpizza
    app.kubernetes.io/instance: catalog
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: quickpizza-config
spec:
  ports:
  - port: 3333
    protocol: TCP
    targetPort: 3333
  selector:
    app.k8s.io/name: quickpizza
    app.kubernetes.io/instance: config
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: quickpizza-copy
spec:
  ports:
  - port: 3333
    protocol: TCP
    targetPort: 3333
  selector:
    app.k8s.io/name: quickpizza
    app.kubernetes.io/instance: copy
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: quickpizza-frontend
spec:
  ports:
  - port: 3333
    protocol: TCP
    targetPort: 3333
  selector:
    app.k8s.io/name: quickpizza
    app.kubernetes.io/instance: frontend-gateway
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: quickpizza-recs
spec:
  ports:
  - port: 3333
    protocol: TCP
    targetPort: 3333
  selector:
    app.k8s.io/name: quickpizza
    app.kubernetes.io/instance: recs
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: quickpizza-ws
spec:
  ports:
  - port: 3333
    protocol: TCP
    targetPort: 3333
  selector:
    app.k8s.io/name: quickpizza
    app.kubernetes.io/instance: ws
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.k8s.io/name: quickpizza
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: catalog
  name: quickpizza-catalog
spec:
  replicas: 1
  selector:
    matchLabels:
      app.k8s.io/name: quickpizza
      app.kubernetes.io/instance: catalog
  template:
    metadata:
      labels:
        app.k8s.io/name: quickpizza
        app.kubernetes.io/instance: catalog
      name: quickpizza-catalog
    spec:
      containers:
      - env:
        - name: QUICKPIZZA_ALL_SERVICES
          value: "0"
        - name: QUICKPIZZA_CATALOG
          value: "1"
        - name: QUICKPIZZA_OTLP_SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/instance']
        envFrom:
        - configMapRef:
            name: tracing-env
            optional: true
        - configMapRef:
            name: quickpizza-env-m6t2mfmht4
        image: ghcr.io/grafana/quickpizza-local:latest
        imagePullPolicy: IfNotPresent
        name: quickpizza
        ports:
        - containerPort: 3333
          name: http
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.k8s.io/name: quickpizza
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: config
  name: quickpizza-config
spec:
  replicas: 1
  selector:
    matchLabels:
      app.k8s.io/name: quickpizza
      app.kubernetes.io/instance: config
  template:
    metadata:
      labels:
        app.k8s.io/name: quickpizza
        app.kubernetes.io/instance: config
      name: quickpizza-config
    spec:
      containers:
      - env:
        - name: QUICKPIZZA_ALL_SERVICES
          value: "0"
        - name: QUICKPIZZA_CONFIG
          value: "1"
        - name: QUICKPIZZA_OTLP_SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/instance']
        envFrom:
        - configMapRef:
            name: tracing-env
            optional: true
        - configMapRef:
            name: quickpizza-env-m6t2mfmht4
        image: ghcr.io/grafana/quickpizza-local:latest
        imagePullPolicy: IfNotPresent
        name: quickpizza
        ports:
        - containerPort: 3333
          name: http
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.k8s.io/name: quickpizza
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: copy
  name: quickpizza-copy
spec:
  replicas: 1
  selector:
    matchLabels:
      app.k8s.io/name: quickpizza
      app.kubernetes.io/instance: copy
  template:
    metadata:
      labels:
        app.k8s.io/name: quickpizza
        app.kubernetes.io/instance: copy
      name: quickpizza-copy
    spec:
      containers:
      - env:
        - name: QUICKPIZZA_ALL_SERVICES
          value: "0"
        - name: QUICKPIZZA_COPY
          value: "1"
        - name: QUICKPIZZA_OTLP_SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/instance']
        envFrom:
        - configMapRef:
            name: tracing-env
            optional: true
        - configMapRef:
            name: quickpizza-env-m6t2mfmht4
        image: ghcr.io/grafana/quickpizza-local:latest
        imagePullPolicy: IfNotPresent
        name: quickpizza
        ports:
        - containerPort: 3333
          name: http
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.k8s.io/name: quickpizza
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: frontend-gateway
  name: quickpizza-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app.k8s.io/name: quickpizza
      app.kubernetes.io/instance: frontend-gateway
  template:
    metadata:
      labels:
        app.k8s.io/name: quickpizza
        app.kubernetes.io/instance: frontend-gateway
      name: quickpizza-frontend
    spec:
      containers:
      - env:
        - name: QUICKPIZZA_ALL_SERVICES
          value: "0"
        - name: QUICKPIZZA_FRONTEND
          value: "1"
        - name: QUICKPIZZA_CATALOG_ENDPOINT
          value: http://quickpizza-catalog:3333
        - name: QUICKPIZZA_COPY_ENDPOINT
          value: http://quickpizza-copy:3333
        - name: QUICKPIZZA_WS_ENDPOINT
          value: http://quickpizza-ws:3333
        - name: QUICKPIZZA_RECOMMENDATIONS_ENDPOINT
          value: http://quickpizza-recs:3333
        - name: QUICKPIZZA_CONFIG_ENDPOINT
          value: http://quickpizza-config:3333
        - name: QUICKPIZZA_OTLP_SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/instance']
        envFrom:
        - configMapRef:
            name: tracing-env
            optional: true
        - configMapRef:
            name: quickpizza-env-m6t2mfmht4
        image: ghcr.io/grafana/quickpizza-local:latest
        imagePullPolicy: IfNotPresent
        name: quickpizza
        ports:
        - containerPort: 3333
          name: http
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.k8s.io/name: quickpizza
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: recs
  name: quickpizza-recs
spec:
  replicas: 1
  selector:
    matchLabels:
      app.k8s.io/name: quickpizza
      app.kubernetes.io/instance: recs
  template:
    metadata:
      labels:
        app.k8s.io/name: quickpizza
        app.kubernetes.io/instance: recs
      name: quickpizza-recs
    spec:
      containers:
      - env:
        - name: QUICKPIZZA_ALL_SERVICES
          value: "0"
        - name: QUICKPIZZA_RECOMMENDATIONS
          value: "1"
        - name: QUICKPIZZA_CATALOG_ENDPOINT
          value: http://quickpizza-catalog:3333
        - name: QUICKPIZZA_COPY_ENDPOINT
          value: http://quickpizza-copy:3333
        - name: QUICKPIZZA_OTLP_SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/instance']
        envFrom:
        - configMapRef:
            name: tracing-env
            optional: true
        - configMapRef:
            name: quickpizza-env-m6t2mfmht4
        image: ghcr.io/grafana/quickpizza-local:latest
        imagePullPolicy: IfNotPresent
        name: quickpizza
        ports:
        - containerPort: 3333
          name: http
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.k8s.io/name: quickpizza
    app.kubernetes.io/component: service
    app.kubernetes.io/instance: ws
  name: quickpizza-ws
spec:
  replicas: 1
  selector:
    matchLabels:
      app.k8s.io/name: quickpizza
      app.kubernetes.io/instance: ws
  template:
    metadata:
      labels:
        app.k8s.io/name: quickpizza
        app.kubernetes.io/instance: ws
      name: quickpizza-ws
    spec:
      containers:
      - env:
        - name: QUICKPIZZA_ALL_SERVICES
          value: "0"
        - name: QUICKPIZZA_WS
          value: "1"
        - name: QUICKPIZZA_OTLP_SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/instance']
        envFrom:
        - configMapRef:
            name: tracing-env
            optional: true
        - configMapRef:
            name: quickpizza-env-m6t2mfmht4
        image: ghcr.io/grafana/quickpizza-local:latest
        imagePullPolicy: IfNotPresent
        name: quickpizza
        ports:
        - containerPort: 3333
          name: http
      restartPolicy: Always
